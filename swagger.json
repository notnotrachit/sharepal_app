{
  "schemes": ["http"],
  "swagger": "2.0",
  "info": {
    "description": "GoLang - Gin - RESTful - MongoDB - Redis",
    "title": "GoLang Rest API Starter Doc",
    "termsOfService": "https://swagger.io/terms/",
    "contact": {
      "name": "Ebubekir YiÄŸit",
      "url": "https://github.com/ebubekiryigit",
      "email": "ebubekiryigit6@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/auth/login": {
      "post": {
        "description": "login a user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "Login",
        "parameters": [
          {
            "description": "Login Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "refreshes a user token",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "Refresh",
        "parameters": [
          {
            "description": "Refresh Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.RefreshRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "registers a user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "Register",
        "parameters": [
          {
            "description": "Register Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/expenses": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets all expenses for the authenticated user with pagination",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["expenses"],
        "summary": "Get User Expenses",
        "parameters": [
          {
            "type": "string",
            "description": "Switch page by 'page'",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "creates a new expense in a group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["expenses"],
        "summary": "Create Expense",
        "parameters": [
          {
            "description": "Expense Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateExpenseRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/expenses/{id}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "get expense by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["expenses"],
        "summary": "Get Expense",
        "parameters": [
          {
            "type": "string",
            "description": "Expense ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "updates an expense by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["expenses"],
        "summary": "Update Expense",
        "parameters": [
          {
            "type": "string",
            "description": "Expense ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Update Expense Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UpdateExpenseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "deletes expense by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["expenses"],
        "summary": "Delete Expense",
        "parameters": [
          {
            "type": "string",
            "description": "Expense ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/friends": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets all friends of the authenticated user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["friends"],
        "summary": "Get Friends",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/friends/block/{userId}": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "blocks a user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["friends"],
        "summary": "Block User",
        "parameters": [
          {
            "type": "string",
            "description": "User ID to block",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/friends/request": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "sends a friend request to another user by email",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["friends"],
        "summary": "Send Friend Request",
        "parameters": [
          {
            "description": "Friend Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.SendFriendRequestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/friends/request/{id}/respond": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "accepts or rejects a friend request",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["friends"],
        "summary": "Respond to Friend Request",
        "parameters": [
          {
            "type": "string",
            "description": "Friendship ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Response Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.RespondFriendRequestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/friends/requests/received": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets all pending friend requests received by the authenticated user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["friends"],
        "summary": "Get Pending Friend Requests",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/friends/requests/sent": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets all pending friend requests sent by the authenticated user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["friends"],
        "summary": "Get Sent Friend Requests",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/friends/{friendId}": {
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "removes a friend from the user's friend list",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["friends"],
        "summary": "Remove Friend",
        "parameters": [
          {
            "type": "string",
            "description": "Friend ID",
            "name": "friendId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets user groups with pagination",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["groups"],
        "summary": "Get User Groups",
        "parameters": [
          {
            "type": "string",
            "description": "Switch page by 'page'",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "creates a new group for expense sharing",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["groups"],
        "summary": "Create Group",
        "parameters": [
          {
            "description": "Group Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.CreateGroupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/groups/{groupId}/balances": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets balance summary for a group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["settlements"],
        "summary": "Get Group Balances",
        "parameters": [
          {
            "type": "string",
            "description": "Group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/groups/{groupId}/expenses": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets expenses for a specific group with pagination",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["expenses"],
        "summary": "Get Group Expenses",
        "parameters": [
          {
            "type": "string",
            "description": "Group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Switch page by 'page'",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/groups/{groupId}/settlements": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets all settlements for a specific group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["settlements"],
        "summary": "Get Group Settlements",
        "parameters": [
          {
            "type": "string",
            "description": "Group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/groups/{groupId}/simplify": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "calculates simplified settlement suggestions for a group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["settlements"],
        "summary": "Simplify Group Debts",
        "parameters": [
          {
            "type": "string",
            "description": "Group ID",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "get group by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["groups"],
        "summary": "Get Group",
        "parameters": [
          {
            "type": "string",
            "description": "Group ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "deletes a group (soft delete)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["groups"],
        "summary": "Delete Group",
        "parameters": [
          {
            "type": "string",
            "description": "Group ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/groups/{id}/members": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets all members of a group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["groups"],
        "summary": "Get Group Members",
        "parameters": [
          {
            "type": "string",
            "description": "Group ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "adds a member to a group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["groups"],
        "summary": "Add Member to Group",
        "parameters": [
          {
            "type": "string",
            "description": "Group ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Add Member Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.AddMemberToGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/groups/{id}/members/{memberId}": {
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "removes a member from a group",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["groups"],
        "summary": "Remove Member from Group",
        "parameters": [
          {
            "type": "string",
            "description": "Group ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Member ID",
            "name": "memberId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/notes": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets user notes with pagination",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["notes"],
        "summary": "Get Notes",
        "parameters": [
          {
            "type": "string",
            "description": "Switch page by 'page'",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "creates a new note",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["notes"],
        "summary": "Create Note",
        "parameters": [
          {
            "description": "Note Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.NoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/notes/{id}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "get note by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["notes"],
        "summary": "Get a note",
        "parameters": [
          {
            "type": "string",
            "description": "Note ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "updates a note by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["notes"],
        "summary": "Update a note",
        "parameters": [
          {
            "type": "string",
            "description": "Note ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Note Request",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.NoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "deletes note by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["notes"],
        "summary": "Delete a note",
        "parameters": [
          {
            "type": "string",
            "description": "Note ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "description": "check server",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["ping"],
        "summary": "Ping",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/settlements": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "gets all settlements for the authenticated user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["settlements"],
        "summary": "Get User Settlements",
        "parameters": [
          {
            "type": "string",
            "description": "Filter by status (pending, completed, cancelled)",
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/settlements/{id}/complete": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "marks a settlement as completed",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["settlements"],
        "summary": "Mark Settlement Complete",
        "parameters": [
          {
            "type": "string",
            "description": "Settlement ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Settlement Request",
            "name": "req",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/models.SettleDebtRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "get current logged in user information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "Get Current User",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/models.Response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "models.AddMemberToGroupRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        }
      }
    },
    "models.CreateExpenseRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "category": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "group_id": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "split_type": {
          "type": "string"
        },
        "splits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.ExpenseSplitRequest"
          }
        }
      }
    },
    "models.CreateGroupRequest": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "member_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "models.ExpenseSplitRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "models.LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "models.NoteRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "models.RefreshRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "models.RegisterRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "models.RespondFriendRequestRequest": {
      "type": "object",
      "properties": {
        "accept": {
          "type": "boolean"
        }
      }
    },
    "models.Response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {}
        },
        "message": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "models.SendFriendRequestRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "models.SettleDebtRequest": {
      "type": "object",
      "properties": {
        "notes": {
          "type": "string"
        }
      }
    },
    "models.UpdateExpenseRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "split_type": {
          "type": "string"
        },
        "splits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.ExpenseSplitRequest"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Bearer-Token",
      "in": "header"
    }
  }
}
